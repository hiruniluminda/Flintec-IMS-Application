:root {
    --rotate-speed: 40;
    --count: 8; /* Default count, the DOM element should override this */
    --easeInOutSine: cubic-bezier(0.37, 0, 0.63, 1);
    --easing: cubic-bezier(0.000, 0.37, 1.000, 0.63);
}

body {
    margin: 0;
}

.void {
    width: 100%;
    max-width: 1024px;
    margin: auto;
    position: relative;
    aspect-ratio: 1 / 1;
}

ul:hover * {
    animation-play-state: paused;
}

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    position: relative;
    width: 100%;
    aspect-ratio: 1 / 1;
    outline: 2px dotted magenta;
    z-index: 1;
}

li {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 100%;
    animation: rotateCW calc(var(--rotate-speed) * 1s) var(--easing) infinite;
}

.card {
    width: 27%;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 16px 24px;
    gap: 8px;
    background: #FFFFFF;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1), 0px 16px 32px rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    font-family: 'Inter', sans-serif;
    font-style: normal;
    font-weight: 400;
    font-size: 14px;
    line-height: 20px;
    color: #535062;
    animation: rotateCCW calc(var(--rotate-speed) * 1s) var(--easing) infinite;
}

.model-name {
    font-weight: 500;
    font-size: 18px;
    line-height: 150%;
    color: #3B2ED0;
    display: block;
}

li:nth-child(2), li:nth-child(2) .card {
    animation-delay: calc((var(--rotate-speed)/var(--count)) * -1s);
}

li:nth-child(3), li:nth-child(3) .card {
    animation-delay: calc((var(--rotate-speed)/var(--count)) * -2s);
}

li:nth-child(4), li:nth-child(4) .card {
    animation-delay: calc((var(--rotate-speed)/var(--count)) * -3s);
}

/* Additional elements like circles for pulse effect */
.center-circle {
    position: absolute;
    width: 230px;
    aspect-ratio: 1 / 1;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background: #FFFFFF;
    box-shadow: 0px 18px 36px -18px rgba(12, 5, 46, 0.3), 0px 30px 60px -12px rgba(12, 5, 46, 0.25);
    border-radius: 50%;
}

/* Keyframes for rotation animations */
@keyframes rotateCW {
    from {
        transform: translate3d(0px, -50%, -1px) rotate(-45deg);
    }

    to {
        transform: translate3d(0px, -50%, 0px) rotate(-315deg);
    }
}

@keyframes rotateCCW {
    from {
        transform: rotate(45deg);
    }

    to {
        transform: rotate(315deg);
    }
}
